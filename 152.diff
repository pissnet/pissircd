diff --git a/include/dns.h b/include/dns.h
index ab079badb..4cbf2a0da 100644
--- a/include/dns.h
+++ b/include/dns.h
@@ -19,6 +19,7 @@ struct DNSReq {
 	DNSReq *prev, *next;
 	char *name; /**< Name being resolved (only for DNSREQ_LINKCONF and DNSREQ_CONNECT) */
 	char ipv6; /**< Resolving for ipv6 or ipv4? */
+	char ipv4fallback; /**< Are we falling back to ipv4 after failing to connect over v6? */
 	DNSReqType type; /**< DNS Request type (DNSREQ_*) */
 	Client *client; /**< Client the request is for, NULL if client died OR unavailable */
 	ConfigItem_link *linkblock; /**< Linkblock */
diff --git a/include/sys.h b/include/sys.h
index dcae59d4d..86fa67856 100644
--- a/include/sys.h
+++ b/include/sys.h
@@ -139,6 +139,8 @@ extern char OSName[256];
 #define P_EWORKING		EINPROGRESS
 #define P_EINTR         EINTR
 #define P_ETIMEDOUT     ETIMEDOUT
+#define P_ENETUNREACH	ENETUNREACH
+#define P_EHOSTUNREACH	EHOSTUNREACH
 #define P_ENOTSOCK	ENOTSOCK
 #define P_EIO		EIO
 #define P_ECONNABORTED	ECONNABORTED
@@ -168,6 +170,8 @@ extern char OSName[256];
 #define P_EWORKING		WSAEWOULDBLOCK
 #define P_EINTR         WSAEINTR
 #define P_ETIMEDOUT     WSAETIMEDOUT
+#define P_ENETUNREACH	WSAENETUNREACH
+#define P_EHOSTUNREACH	WSAEHOSTUNREACH
 #define P_ENOTSOCK	WSAENOTSOCK
 #define P_EIO		EIO
 #define P_ECONNABORTED	WSAECONNABORTED
diff --git a/src/dns.c b/src/dns.c
index f2c3766ac..dec6da6ca 100644
--- a/src/dns.c
+++ b/src/dns.c
@@ -393,9 +393,16 @@ void unrealdns_cb_nametoip_link(void *arg, int status, int timeouts, struct host
 			return;
 		}
 
-		/* fatal error while resolving */
-		sendto_ops_and_log("Unable to resolve hostname '%s', when trying to connect to server %s.",
-			r->name, r->linkblock->servername);
+		if (r->ipv4fallback) {
+			/* ipv6-only domain but we couldn't connect over ipv6 and fell back to ipv4 */
+			sendto_ops_and_log("Couldn't connect to server %s.", r->linkblock->servername);
+		 }
+		else
+		{
+			/* fatal error while resolving */
+			sendto_ops_and_log("Unable to resolve hostname '%s', when trying to connect to server %s.",
+								r->name, r->linkblock->servername);
+		}
 		r->linkblock->refcount--;
 		unrealdns_freeandremovereq(r);
 		return;
@@ -424,6 +431,15 @@ void unrealdns_cb_nametoip_link(void *arg, int status, int timeouts, struct host
 			sendto_ops_and_log("Trying to activate link with server %s[%s]...", r->linkblock->servername, ip);
 			break;
 		case -1:
+			/* The three most common errors when ipv6 is down or does not exist */
+			if (r->ipv6 && (ERRNO == P_ENETUNREACH || ERRNO == P_ETIMEDOUT || ERRNO == P_EHOSTUNREACH))
+			{
+				/* We couldn't connect over v6, let's give it a try over v4 */
+				r->ipv6 = 0;
+				r->ipv4fallback = 1;
+				ares_gethostbyname(resolver_channel, r->name, AF_INET, unrealdns_cb_nametoip_link, r);
+				return;
+			}
 			sendto_ops_and_log("Couldn't connect to server %s[%s].", r->linkblock->servername, ip);
 			break;
 		case -2:
